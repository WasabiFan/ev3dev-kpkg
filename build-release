#!/bin/bash

set -e

if [ "$RPI" = "1" ]; then
    OVERLAY_DIR="ev3dev-rpi"
    DEBARCH="armhf"
    CROSS_COMPILE=/usr/lib/gcc-linaro-arm-linux-gnueabihf-raspbian/bin/arm-linux-gnueabihf-
    DEFCONFIG="ev3devrpi_defconfig"
    DPUT_HOST="rpi-ev3dev"
elif [ "$RPI" = "2" ]; then
    OVERLAY_DIR="ev3dev-rpi2"
    DEBARCH="armhf"
    DEFCONFIG="ev3devrpi2_defconfig"
    DPUT_HOST="ev3dev"
    echo "RPi2 not supported yet"
    exit 1
else
    OVERLAY_DIR="ev3dev-ev3"
    DEBARCH="armel"
    CROSS_COMPILE=/opt/arm-2011.03/bin/arm-none-eabi-
    MODULES_TARGET="modules"
    DEFCONFIG="ev3dev_defconfig"
    DPUT_HOST="ev3dev"
fi

CHANGELOG="${OVERLAY_DIR}/changelog"

REVISION=$(dpkg-parsechangelog -l${CHANGELOG}| sed -n -e 's/^Version: //p')

if [ ! -z "$1" ]; then
    REPO=$1
else
    REPO="test"
fi

# rpi1 has to go in special raspbian repo

PACKAGE_VERSION=$(dpkg-parsechangelog -l${CHANGELOG}| sed -n -e 's/Source: linux-source-//p')

# make sure git is ignoring debian/control in all of the modules because
# it is automatically updated

if [ ! -z $MODULES_TARGET ]; then
    pushd modules

    for d in $(ls)
    do
        pushd ${d}
        git update-index --assume-unchanged debian/control
        popd
    done

    popd
fi

# change to the kernel directory to do the actual building

if [ -z "$RPI" ]; then
    pushd kernel
else
    pushd rpi-kernel
fi

KERNEL_VERSION=$(make ARCH=arm kernelversion)

if [ "${PACKAGE_VERSION}" != "${KERNEL_VERSION}" ]; then
    echo "Kernel version (${KERNEL_VERSION}) does not match ${CHANGELOG} version (${PACKAGE_VERSION})."
    exit 1
fi

if [ "${REPO}" != "test" ]; then
    git tag "v${KERNEL_VERSION}_${REVISION//\~/rc}"
    pushd drivers/lego
    git tag "v${KERNEL_VERSION}_${REVISION//\~/rc}"
    popd
fi

echo "---- CLEANING UP ----"
make ARCH=arm distclean
git clean -dfX
git clean -df
find ../modules -mindepth 1 -maxdepth 1 -type d -exec make -C {} clean \;
echo "---- LOADING DEFAULT CONFIGURATION ----"
make ARCH=arm ${DEFCONFIG}
# make sure kernel version (uname -v) matches debian revision
echo $(( $(expr match ${REVISION} '^[0-9]*') - 1 )) > .version
echo "---- BUILDING PACKAGES ----"
LOCALVERSION="" DEB_HOST_ARCH=${DEBARCH} MODULE_LOC=../modules \
    make-kpkg --rootcmd fakeroot --overlay-dir ../${OVERLAY_DIR} \
    --arch arm --cross-compile ${CROSS_COMPILE} \
    --initrd --revision ${REVISION} --jobs $(nproc) \
    kernel_image kernel_headers ${MODULES_TARGET}
echo "---- GENERATING CHANGES FILE ----"
CHANGES_FILE="../ev3dev-kernel_${KERNEL_VERSION}_${REVISION}_${DEBARCH}.changes"
dpkg-genchanges -b > ${CHANGES_FILE}
# dpkg-genchanges includes host arch for some reason, so we have to remove it
sed -i "s/ amd64//" ${CHANGES_FILE}
cd ..
echo "---- SIGNING AND UPLOADING ----"
debsign *.changes
dput ${DPUT_HOST}.${REPO} *.changes
rm -f *.deb *.changes *.upload
